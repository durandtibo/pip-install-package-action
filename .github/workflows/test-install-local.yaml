name: Test - Install Packages (local)
on:
  workflow_call:
  workflow_dispatch:  # to trigger manually

permissions:
  contents: read

jobs:
  jax:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        jax-version: [
          0.6.0,
          0.5.3,
          0.4.38,
          0.4.1,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install valid package version
        uses: ./
        with:
          package-name: 'jax'
          package-version: ${{ matrix.jax-version }}
          python-version: ${{ matrix.python-version }}

      - name: Install packages
        run: |
          pip install pytest

      - name: Run functional tests
        run: |
          python -m pytest tests/functional


  numpy:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        numpy-version: [
          2.2.1,
          2.1.1,
          2.0.2,
          1.26.4,
          1.25.2,
          1.24.3,
          1.23.5,
          1.22.4,
          1.21.6,
          1.20.3,
          1.20.0,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install valid package version
        uses: ./
        with:
          package-name: 'numpy'
          package-version: ${{ matrix.numpy-version }}
          python-version: ${{ matrix.python-version }}

      - name: Install packages
        run: |
          pip install pytest

      - name: Run functional tests
        run: |
          python -m pytest tests/functional


  pandas:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        pandas-version: [
          2.2.3,
          2.1.4,
          2.0.3,
          2.0.0,
          1.5.3,
          1.4.4,
          1.3.5,
          1.2.5,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install valid package version
        uses: ./
        with:
          package-name: 'pandas'
          package-version: ${{ matrix.pandas-version }}
          python-version: ${{ matrix.python-version }}

      - name: Install packages
        run: |
          pip install pytest

      - name: Run functional tests
        run: |
          python -m pytest tests/functional


  pyarrow:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        pyarrow-version: [
          20.0.0,
          19.0.1,
          18.1.0,
          17.0.0,
          16.1.0,
          15.0.2,
          14.0.2,
          13.0.0,
          12.0.1,
          11.0.0,
          10.0.1,
          9.0.0,
          8.0.0,
          7.0.0,
          6.0.1,
          5.0.0,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install valid package version
        uses: ./
        with:
          package-name: 'pyarrow'
          package-version: ${{ matrix.pyarrow-version }}
          python-version: ${{ matrix.python-version }}

      - name: Install packages
        run: |
          pip install pytest

      - name: Run functional tests
        run: |
          python -m pytest tests/functional


  requests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        requests-version: [
          2.32.3,
          2.31.0,
          2.30.0,
          2.29.0,
          2.28.2,
          2.27.1,
          2.26.0,
          2.25.1,
          2.25.0,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install valid package version
        uses: ./
        with:
          package-name: 'requests'
          package-version: ${{ matrix.requests-version }}
          python-version: ${{ matrix.python-version }}

      - name: Install packages
        run: |
          pip install pytest

      - name: Run functional tests
        run: |
          python -m pytest tests/functional


  scikit-learn:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        scikit-learn-version: [
          1.6.0,
          1.5.2,
          1.4.2,
          1.3.2,
          1.2.2,
          1.1.3,
          1.0.2,
          1.0.0,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install valid package version
        uses: ./
        with:
          package-name: 'scikit-learn'
          package-version: ${{ matrix.scikit-learn-version }}
          python-version: ${{ matrix.python-version }}

      - name: Install packages
        run: |
          pip install pytest

      - name: Run functional tests
        run: |
          python -m pytest tests/functional


  scipy:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        scipy-version: [
          1.15.2,
          1.14.1,
          1.13.1,
          1.12.0,
          1.11.4,
          1.10.1,
          1.9.3,
          1.8.1,
          1.7.3,
          1.6.3,
          1.6.0,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install valid package version
        uses: ./
        with:
          package-name: 'scipy'
          package-version: ${{ matrix.scipy-version }}
          python-version: ${{ matrix.python-version }}

      - name: Install packages
        run: |
          pip install pytest

      - name: Run functional tests
        run: |
          python -m pytest tests/functional


  torch:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        torch-version: [
          2.7.0,
          2.6.0,
          2.5.1,
          2.4.1,
          2.3.1,
          2.2.2,
          2.1.2,
          2.0.1,
          1.13.1,
          1.12.1,
          1.11.0,
          1.10.2,
          1.9.1,
          1.9.0,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install valid package version
        uses: ./
        with:
          package-name: 'torch'
          package-version: ${{ matrix.torch-version }}
          python-version: ${{ matrix.python-version }}

      - name: Install packages
        run: |
          pip install pytest

      - name: Run functional tests
        run: |
          python -m pytest tests/functional


  torch-poetry:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        torch-version: [
          2.7.0,
          2.6.0,
          2.5.1,
          2.4.1,
          2.3.1,
          2.2.2,
          2.1.2,
          2.0.1,
          1.13.1,
          1.12.1,
          1.11.0,
          1.10.2,
          1.9.1,
          1.9.0,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Set environment variable
        run: |
          echo $(poetry run poetry env info --path)/bin >> $GITHUB_PATH

      - name: Install valid package version
        uses: ./
        with:
          package-name: 'torch'
          package-version: ${{ matrix.torch-version }}
          python-version: ${{ matrix.python-version }}

      - name: Install packages
        run: |
          pip install pytest

      - name: Run functional tests
        run: |
          python -m pytest tests/functional

  xarray:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        xarray-version: [
          '2025.1.0',
          '2024.11.0',
          '2024.10.0',
          '2024.9.0',
          '2024.7.0',
          '2024.6.0',
          '2024.5.0',
          '2024.3.0',
          '2024.2.0',
          '2024.1.1',
          '2023.12.0',
          '2023.11.0',
          '2023.10.1',
          '2023.9.0',
          '2023.8.0',
          '2023.7.0',
          '2023.6.0',
          '2023.5.0',
          '2023.4.2',
          '2023.3.0',
          '2023.2.0',
          '2023.1.0',
          '2022.12.0',
          '2022.11.0',
          '2022.10.0',
          '2022.9.0',
          '2022.6.0',
          '2022.3.0',
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install valid package version
        uses: ./
        with:
          package-name: 'xarray'
          package-version: ${{ matrix.xarray-version }}
          python-version: ${{ matrix.python-version }}

      - name: Install packages
        run: |
          pip install pytest

      - name: Run functional tests
        run: |
          python -m pytest tests/functional
